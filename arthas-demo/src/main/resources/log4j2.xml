<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j2 自动检测修改配置文件和重新配置本身，设置间隔秒数-->
<configuration monitorInterval="5">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
    <!--变量配置-->
    <properties>
        <property name="APP_NAME">arthas-demo</property>
        <property name="LOG_HOME">/data/server-logs/${APP_NAME}</property>
<!--        <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />-->
        <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}{GMT+8} [${APP_NAME}] [%X{traceId}] [%X{spanId}] %-5level [%thread][%file:%line] - %msg%n" />
    </properties>

    <appenders>
        <!-- 这个输出控制台的配置 -->
<!--        <Console name="Console" target="SYSTEM_OUT">-->
<!--            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}{GMT+8} [${APP_NAME}] [%X{traceId}] [%X{spanId}] %level [%thread][%file:%line] - %msg%n"/>-->
<!--        </Console>-->

        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <!--            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}{GMT+8} [${APP_NAME}] [%X{traceId}] [%X{spanId}] %-5level [%thread][%file:%line] - %msg%n" />-->
            <PatternLayout pattern="${LOG_PATTERN}" />
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>


        <!--Info级别日志输出 -->
        <RollingRandomAccessFile name="InfoLog" fileName="${LOG_HOME}/info.log" filePattern="${LOG_HOME}/info-%d{yyyy-MM-dd}.log">
            <Filters>
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}{GMT+8} [${APP_NAME}] [%X{traceId}] [%X{spanId}] %level [%thread][%file:%line] - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="*.log"/>
                    <IfLastModified age="3d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>

        <!--Error级别日志输出 -->
        <RollingRandomAccessFile name="ErrorLog" fileName="${LOG_HOME}/error/error.log" filePattern="${LOG_HOME}/error/error-%d{yyyy-MM-dd}.log">
            <Filters>
                <ThresholdFilter level="fatal" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}{GMT+8} [${APP_NAME}] [%X{traceId}] [%X{spanId}] %level [%thread][%file:%line] - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="*.log"/>
                    <IfLastModified age="3d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>
    </appenders>

    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.mybatis" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
<!--        <Logger name="org.springframework" level="info" additivity="false">-->
<!--            <AppenderRef ref="Console"/>-->
<!--        </Logger>-->
        <!--日志级别-->
        <root level="trace">
            <appender-ref ref="Console"/>
            <appender-ref ref="InfoLog"/>
            <appender-ref ref="ErrorLog"/>
        </root>
    </loggers>

</configuration>